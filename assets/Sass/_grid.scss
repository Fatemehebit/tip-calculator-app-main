@use "sass:math";

$grid-columns: 12;

$layout-values: flex-start, flex-end, center, space-between, space-around;

$align-items: baseline, center, flex-start, flex-end;

.container {
  margin: 0 auto;
  border-radius: $base-border-radius;
}
.row {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
}


// .Bill-Select-Number{
//   max-width: 45%;
// }

// .tip-total{
//   width: 50%;
// }

@each $val in $layout-values {
    .justify-#{$val} {
      justify-content: $val;
    }
}

@each $val in $align-items {
  .align-#{$val} {
    align-items: $val;
  }
}

// ----------------

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      width: math.div($i * 100%, $grid-columns);
    }
  }

  .tip-amount , .total-per{
    font-size: $font-size-sm !important;
  }

  .tip-total{
    padding: 2rem !important;
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      width: math.div($i * 100%, $grid-columns) !important;
    }
  }

  .input-dollar , .input-person , .person{
    width: 100% !important;
  }

  .row{
    display: flex;
    flex-direction: column;
  }

  .btn{
    width: 48% !important;
  }

  .custom{
    width: 48% !important;
  }

  .person{
    font-size: $font-size-sm;
  }

}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      width: math.div($i * 100%, $grid-columns);
    }
  }

  .img-dollar{
    transform: translate(368%, 53%) !important;
  }

  .img-person{
    transform: translate(323%, 60%) !important;
  }

  #tip , #total{
    font-size: $font-size-xl !important;
  }

}
@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

// @include xxl {
//   @for $i from 1 through $grid-columns {
//     .col-#{$i}-xxl {
//       width: math.div($i * 100%, $grid-columns);
//     }
//   }

// }

// --------------------------------

$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
);

@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    gap: $val;
  }
  // .gap-#{$key} {
  //   margin-left: -$val;
  //   margin-right: -$val;
  // }

  .gapR-#{$key}{
    row-gap: $val;
  }

  .gapC-#{$key}{
    column-gap: $val;
  }
}